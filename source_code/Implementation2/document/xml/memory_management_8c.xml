<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="memory_management_8c" kind="file" language="C++">
    <compoundname>memoryManagement.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="memory_management_8h" local="yes">memoryManagement.h</includes>
    <incdepgraph>
      <node id="33">
        <label>memoryManagement.h</label>
        <link refid="memory_management_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>stdlib.h</label>
      </node>
      <node id="32">
        <label>stddef.h</label>
      </node>
      <node id="36">
        <label>string.h</label>
      </node>
      <node id="37">
        <label>time.h</label>
      </node>
      <node id="31">
        <label>src/memoryManagement.c</label>
        <link refid="memoryManagement.c"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int perform_alloc</definition>
        <argsstring>(int minimum, int maximum, int start, int size)</argsstring>
        <name>perform_alloc</name>
        <param>
          <type>int</type>
          <declname>minimum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="60" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="60" bodyend="97"/>
        <referencedby refid="memory_management_8h_1aea43d1dfada1be33a518865f1dfec034" compoundref="memory_management_8c" startline="110" endline="203">check_for_space</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1aea43d1dfada1be33a518865f1dfec034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* check_for_space</definition>
        <argsstring>(int size)</argsstring>
        <name>check_for_space</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="110" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="110" bodyend="203"/>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" compoundref="memory_management_8h" startline="149">FALSE</references>
        <references refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" compoundref="memory_management_8h" startline="80">SIZE8</references>
        <references refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" compoundref="memory_management_8c" startline="60" endline="97">perform_alloc</references>
        <references refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" compoundref="memory_management_8h" startline="102">START_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" compoundref="memory_management_8h" startline="103">END_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" compoundref="memory_management_8h" startline="121">INITIAL_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="148">TRUE</references>
        <references refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" compoundref="memory_management_8h" startline="81">SIZE16</references>
        <references refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" compoundref="memory_management_8h" startline="104">START_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" compoundref="memory_management_8h" startline="105">END_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" compoundref="memory_management_8h" startline="123">INITIAL_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" compoundref="memory_management_8h" startline="82">SIZE32</references>
        <references refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" compoundref="memory_management_8h" startline="106">START_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" compoundref="memory_management_8h" startline="107">END_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" compoundref="memory_management_8h" startline="125">INITIAL_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" compoundref="memory_management_8h" startline="83">SIZE64</references>
        <references refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" compoundref="memory_management_8h" startline="108">START_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" compoundref="memory_management_8h" startline="109">END_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" compoundref="memory_management_8h" startline="127">INITIAL_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" compoundref="memory_management_8h" startline="84">SIZE128</references>
        <references refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" compoundref="memory_management_8h" startline="110">START_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" compoundref="memory_management_8h" startline="111">END_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" compoundref="memory_management_8h" startline="129">INITIAL_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" compoundref="memory_management_8h" startline="85">SIZE256</references>
        <references refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" compoundref="memory_management_8h" startline="112">START_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" compoundref="memory_management_8h" startline="113">END_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" compoundref="memory_management_8h" startline="131">INITIAL_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" compoundref="memory_management_8h" startline="86">SIZE512</references>
        <references refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" compoundref="memory_management_8h" startline="114">START_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" compoundref="memory_management_8h" startline="115">END_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" compoundref="memory_management_8h" startline="133">INITIAL_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" compoundref="memory_management_8h" startline="87">SIZE1024</references>
        <references refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" compoundref="memory_management_8h" startline="116">START_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" compoundref="memory_management_8h" startline="117">END_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" compoundref="memory_management_8h" startline="135">INITIAL_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" compoundref="memory_management_8h" startline="88">SIZE2048</references>
        <references refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" compoundref="memory_management_8h" startline="118">START_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" compoundref="memory_management_8h" startline="119">END_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" compoundref="memory_management_8h" startline="137">INITIAL_LENGTH_SIZE2048</references>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="219" endline="229">memory_alloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1ae30a35d507593a3635856b601305dd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_alloc</definition>
        <argsstring>(int size)</argsstring>
        <name>memory_alloc</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="219" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="219" bodyend="229"/>
        <references refid="memory_management_8c_1aea43d1dfada1be33a518865f1dfec034" compoundref="memory_management_8c" startline="110" endline="203">check_for_space</references>
        <referencedby refid="memory_management_8h_1a9fddae3713297adcee22fae422fe4383" compoundref="memory_management_8c" startline="332" endline="342">memory_calloc</referencedby>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="358" endline="379">memory_realloc</referencedby>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="97" endline="213">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a8a12d29f1824bf7225965e8b35a0f3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status memory_free</definition>
        <argsstring>(void *pointer)</argsstring>
        <name>memory_free</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="242" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="242" bodyend="286"/>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" compoundref="memory_management_8h" startline="149">FALSE</references>
        <references refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" compoundref="memory_management_8h" startline="121">INITIAL_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a5a31221b432ad5a360476010f3d786fe" compoundref="memory_management_8h" startline="122">MAX_LENGTH_SIZE8</references>
        <references refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" compoundref="memory_management_8c" startline="302" endline="315">delete_pointer</references>
        <references refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" compoundref="memory_management_8h" startline="102">START_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" compoundref="memory_management_8h" startline="80">SIZE8</references>
        <references refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" compoundref="memory_management_8h" startline="123">INITIAL_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1aec5f54b4ff5ea97b1bb298318f9bef2b" compoundref="memory_management_8h" startline="124">MAX_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" compoundref="memory_management_8h" startline="104">START_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" compoundref="memory_management_8h" startline="81">SIZE16</references>
        <references refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" compoundref="memory_management_8h" startline="125">INITIAL_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ac309e3185598c14710f7e86e9a8d7eac" compoundref="memory_management_8h" startline="126">MAX_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" compoundref="memory_management_8h" startline="106">START_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" compoundref="memory_management_8h" startline="82">SIZE32</references>
        <references refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" compoundref="memory_management_8h" startline="127">INITIAL_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1a994f4c90c9aa7d6901408d390a58a461" compoundref="memory_management_8h" startline="128">MAX_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" compoundref="memory_management_8h" startline="108">START_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" compoundref="memory_management_8h" startline="83">SIZE64</references>
        <references refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" compoundref="memory_management_8h" startline="129">INITIAL_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a1495561797b4fc61bbbb796b5cfea87c" compoundref="memory_management_8h" startline="130">MAX_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" compoundref="memory_management_8h" startline="110">START_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" compoundref="memory_management_8h" startline="84">SIZE128</references>
        <references refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" compoundref="memory_management_8h" startline="131">INITIAL_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a6af89ae77a299e48140b132936410d92" compoundref="memory_management_8h" startline="132">MAX_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" compoundref="memory_management_8h" startline="112">START_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" compoundref="memory_management_8h" startline="85">SIZE256</references>
        <references refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" compoundref="memory_management_8h" startline="133">INITIAL_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a584ba52d3a0818ea3c54119df40d1b56" compoundref="memory_management_8h" startline="134">MAX_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" compoundref="memory_management_8h" startline="114">START_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" compoundref="memory_management_8h" startline="86">SIZE512</references>
        <references refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" compoundref="memory_management_8h" startline="135">INITIAL_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a31a9021f5d3473e2c0f34758cce8c1c4" compoundref="memory_management_8h" startline="136">MAX_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" compoundref="memory_management_8h" startline="116">START_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" compoundref="memory_management_8h" startline="87">SIZE1024</references>
        <references refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" compoundref="memory_management_8h" startline="137">INITIAL_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ad1a88036d0e1dbeb28757b82db95603f" compoundref="memory_management_8h" startline="138">MAX_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" compoundref="memory_management_8h" startline="118">START_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" compoundref="memory_management_8h" startline="88">SIZE2048</references>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="358" endline="379">memory_realloc</referencedby>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="97" endline="213">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status delete_pointer</definition>
        <argsstring>(int minimum, int start, int size, void *ptr)</argsstring>
        <name>delete_pointer</name>
        <param>
          <type>int</type>
          <declname>minimum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="302" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="302" bodyend="315"/>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="148">TRUE</references>
        <referencedby refid="memory_management_8h_1a8a12d29f1824bf7225965e8b35a0f3a8" compoundref="memory_management_8c" startline="242" endline="286">memory_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a9fddae3713297adcee22fae422fe4383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_calloc</definition>
        <argsstring>(int nelem, int elsize)</argsstring>
        <name>memory_calloc</name>
        <param>
          <type>int</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="332" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="332" bodyend="342"/>
        <references refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="219" endline="229">memory_alloc</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="97" endline="213">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1aeae46c0f1bc40e0e3b469f40feefd8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_realloc</definition>
        <argsstring>(void *ptr, int size)</argsstring>
        <name>memory_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="358" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="358" bodyend="379"/>
        <references refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="219" endline="229">memory_alloc</references>
        <references refid="memory_management_8c_1a3e2309af44a44009e20dea96b76a5f06" compoundref="memory_management_8c" startline="392" endline="438">memory_size</references>
        <references refid="memory_management_8c_1a8a12d29f1824bf7225965e8b35a0f3a8" compoundref="memory_management_8c" startline="242" endline="286">memory_free</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="97" endline="213">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a3e2309af44a44009e20dea96b76a5f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int memory_size</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>memory_size</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="392" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="392" bodyend="438"/>
        <references refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" compoundref="memory_management_8h" startline="121">INITIAL_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a5a31221b432ad5a360476010f3d786fe" compoundref="memory_management_8h" startline="122">MAX_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" compoundref="memory_management_8h" startline="80">SIZE8</references>
        <references refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" compoundref="memory_management_8h" startline="123">INITIAL_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1aec5f54b4ff5ea97b1bb298318f9bef2b" compoundref="memory_management_8h" startline="124">MAX_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" compoundref="memory_management_8h" startline="81">SIZE16</references>
        <references refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" compoundref="memory_management_8h" startline="125">INITIAL_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ac309e3185598c14710f7e86e9a8d7eac" compoundref="memory_management_8h" startline="126">MAX_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" compoundref="memory_management_8h" startline="82">SIZE32</references>
        <references refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" compoundref="memory_management_8h" startline="127">INITIAL_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1a994f4c90c9aa7d6901408d390a58a461" compoundref="memory_management_8h" startline="128">MAX_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" compoundref="memory_management_8h" startline="83">SIZE64</references>
        <references refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" compoundref="memory_management_8h" startline="129">INITIAL_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a1495561797b4fc61bbbb796b5cfea87c" compoundref="memory_management_8h" startline="130">MAX_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" compoundref="memory_management_8h" startline="84">SIZE128</references>
        <references refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" compoundref="memory_management_8h" startline="131">INITIAL_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a6af89ae77a299e48140b132936410d92" compoundref="memory_management_8h" startline="132">MAX_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" compoundref="memory_management_8h" startline="85">SIZE256</references>
        <references refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" compoundref="memory_management_8h" startline="133">INITIAL_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a584ba52d3a0818ea3c54119df40d1b56" compoundref="memory_management_8h" startline="134">MAX_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" compoundref="memory_management_8h" startline="86">SIZE512</references>
        <references refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" compoundref="memory_management_8h" startline="135">INITIAL_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a31a9021f5d3473e2c0f34758cce8c1c4" compoundref="memory_management_8h" startline="136">MAX_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" compoundref="memory_management_8h" startline="87">SIZE1024</references>
        <references refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" compoundref="memory_management_8h" startline="137">INITIAL_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ad1a88036d0e1dbeb28757b82db95603f" compoundref="memory_management_8h" startline="138">MAX_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" compoundref="memory_management_8h" startline="88">SIZE2048</references>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="358" endline="379">memory_realloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a9961d9a3b8f1cab8d2801a51cac018c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status block_information</definition>
        <argsstring>(void)</argsstring>
        <name>block_information</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="453" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="453" bodyend="468"/>
        <references refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" compoundref="memory_management_8c" startline="482" endline="522">used_blocks</references>
        <references refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" compoundref="memory_management_8c" startline="590" endline="630">unused_blocks</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="148">TRUE</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="97" endline="213">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int used_blocks</definition>
        <argsstring>(int size)</argsstring>
        <name>used_blocks</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="482" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="482" bodyend="522"/>
        <references refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" compoundref="memory_management_8c" startline="535" endline="552">calculate_blocks</references>
        <references refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" compoundref="memory_management_8h" startline="102">START_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" compoundref="memory_management_8h" startline="103">END_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" compoundref="memory_management_8h" startline="104">START_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" compoundref="memory_management_8h" startline="105">END_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" compoundref="memory_management_8h" startline="106">START_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" compoundref="memory_management_8h" startline="107">END_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" compoundref="memory_management_8h" startline="108">START_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" compoundref="memory_management_8h" startline="109">END_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" compoundref="memory_management_8h" startline="110">START_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" compoundref="memory_management_8h" startline="111">END_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" compoundref="memory_management_8h" startline="112">START_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" compoundref="memory_management_8h" startline="113">END_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" compoundref="memory_management_8h" startline="114">START_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" compoundref="memory_management_8h" startline="115">END_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" compoundref="memory_management_8h" startline="116">START_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" compoundref="memory_management_8h" startline="117">END_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" compoundref="memory_management_8h" startline="118">START_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" compoundref="memory_management_8h" startline="119">END_LENGTH_SIZE2048</references>
        <referencedby refid="memory_management_8h_1a9961d9a3b8f1cab8d2801a51cac018c1" compoundref="memory_management_8c" startline="453" endline="468">block_information</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int calculate_blocks</definition>
        <argsstring>(int minimum, int maximum)</argsstring>
        <name>calculate_blocks</name>
        <param>
          <type>int</type>
          <declname>minimum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="535" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="535" bodyend="552"/>
        <referencedby refid="memory_management_8h_1a8758c4e9207b46696939c497d7688b74" compoundref="memory_management_8c" startline="482" endline="522">used_blocks</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int unused_blocks</definition>
        <argsstring>(int size)</argsstring>
        <name>unused_blocks</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="590" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="590" bodyend="630"/>
        <references refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" compoundref="memory_management_8c" startline="643" endline="660">calculate_free_blocks</references>
        <references refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" compoundref="memory_management_8h" startline="102">START_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" compoundref="memory_management_8h" startline="103">END_LENGTH_SIZE8</references>
        <references refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" compoundref="memory_management_8h" startline="104">START_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" compoundref="memory_management_8h" startline="105">END_LENGTH_SIZE16</references>
        <references refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" compoundref="memory_management_8h" startline="106">START_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" compoundref="memory_management_8h" startline="107">END_LENGTH_SIZE32</references>
        <references refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" compoundref="memory_management_8h" startline="108">START_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" compoundref="memory_management_8h" startline="109">END_LENGTH_SIZE64</references>
        <references refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" compoundref="memory_management_8h" startline="110">START_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" compoundref="memory_management_8h" startline="111">END_LENGTH_SIZE128</references>
        <references refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" compoundref="memory_management_8h" startline="112">START_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" compoundref="memory_management_8h" startline="113">END_LENGTH_SIZE256</references>
        <references refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" compoundref="memory_management_8h" startline="114">START_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" compoundref="memory_management_8h" startline="115">END_LENGTH_SIZE512</references>
        <references refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" compoundref="memory_management_8h" startline="116">START_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" compoundref="memory_management_8h" startline="117">END_LENGTH_SIZE1024</references>
        <references refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" compoundref="memory_management_8h" startline="118">START_LENGTH_SIZE2048</references>
        <references refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" compoundref="memory_management_8h" startline="119">END_LENGTH_SIZE2048</references>
        <referencedby refid="memory_management_8h_1a9961d9a3b8f1cab8d2801a51cac018c1" compoundref="memory_management_8c" startline="453" endline="468">block_information</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int calculate_free_blocks</definition>
        <argsstring>(int minimum, int maximum)</argsstring>
        <name>calculate_free_blocks</name>
        <param>
          <type>int</type>
          <declname>minimum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" line="643" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c" bodystart="643" bodyend="660"/>
        <referencedby refid="memory_management_8h_1a84a886fa82e1e3db2ab9e16c3a3b1434" compoundref="memory_management_8c" startline="590" endline="630">unused_blocks</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memoryManagement.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright(C)<sp/>2006.MindTree<sp/>Pvt.<sp/>Ltd.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Revision<sp/>:<sp/>V1.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Last<sp/>Modified<sp/>Date<sp/><sp/><sp/><sp/>Authors<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Description</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>24-SEP-2015<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prathyusha<sp/>A.N.V.S<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial<sp/>version</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deepak<sp/>Birla</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rohit<sp/>Kumar</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dhyaneswaran<sp/>DG</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/>memoryManagement.c</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>This<sp/>program<sp/>has<sp/>the<sp/>library<sp/>functions<sp/>for<sp/>allocating<sp/>memory,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocating<sp/>memory<sp/>and<sp/>displaying<sp/>the<sp/>size<sp/>of<sp/>free<sp/>memory<sp/>and<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocated<sp/>memory.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*memory_alloc<sp/>function<sp/>-<sp/>This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user.<sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*memory_free<sp/>function<sp/>-<sp/>This<sp/>function<sp/>frees<sp/>the<sp/>space<sp/>allocated<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>in<sp/>the<sp/>created<sp/>heap<sp/>space<sp/>under<sp/>user&apos;s<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*memory_calloc<sp/>function<sp/>-<sp/>This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>in<sp/>asked<sp/>number<sp/>of<sp/>blocks<sp/>of<sp/>specified<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>and<sp/>intialise<sp/>them<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*memory_realloc<sp/>function<sp/>-<sp/>This<sp/>function<sp/>reallocates<sp/>memory<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previously<sp/>allocated<sp/>memory<sp/>pointer<sp/>by<sp/>asking<sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>user<sp/>,the<sp/>already<sp/>allocated<sp/>pointer<sp/>and<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>to<sp/>be<sp/>allocated.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Include<sp/>files</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory_management_8h" kindref="compound">memoryManagement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>performs<sp/>allocation<sp/>of<sp/>memory<sp/>in<sp/>the<sp/>heap<sp/>space<sp/>and<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>returns<sp/>the<sp/>address<sp/>to<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>minimum<sp/>-<sp/>Starting<sp/>slot<sp/>of<sp/>Particular<sp/>size.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>maximum<sp/>-<sp/>Ending<sp/>slot<sp/>of<sp/>particular<sp/>size.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>start<sp/>-<sp/><sp/><sp/>Starting<sp/>block<sp/>of<sp/>particular<sp/>size.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size<sp/><sp/>-<sp/><sp/>Block<sp/>size<sp/>used.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>ptr<sp/><sp/><sp/>-<sp/>Pointer<sp/>pointing<sp/>to<sp/>current<sp/>address.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="memory_management_8h_1aaa1cfd5c78cb649d31cdcf5056523f9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimum<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maximum<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,index2,blockNumber,end,flag=0,slotNumber;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>maximum<sp/>-<sp/>minimum<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*base<sp/>address<sp/>of<sp/>particular<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>&amp;totalMemoryArea[<sp/>start<sp/>];<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index2<sp/>=<sp/>0<sp/>;<sp/>index2<sp/>&lt;=<sp/>end<sp/>;<sp/>index2++<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index1<sp/>=<sp/>0<sp/>;<sp/>index1<sp/>&lt;<sp/>8<sp/>;<sp/>index1++<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotNumber<sp/>=<sp/>minimum<sp/>+<sp/>index2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*searching<sp/>for<sp/>first<sp/>free<sp/>block.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((totalMemoryArea[slotNumber]<sp/>&amp;<sp/>1&lt;&lt;index1)<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//blockNumber<sp/>=<sp/>(8*index2)<sp/>+<sp/>index1<sp/>+<sp/>1<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockNumber<sp/>=<sp/>(8*index2)<sp/>+<sp/>index1<sp/><sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*changing<sp/>status<sp/>of<sp/>bit<sp/>for<sp/>allocated<sp/>block.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalMemoryArea[slotNumber]<sp/>=<sp/>totalMemoryArea[slotNumber]<sp/>|<sp/>1&lt;&lt;index1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1<sp/>==<sp/>flag)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*checking<sp/>whether<sp/>all<sp/>slot<sp/>of<sp/>partricular<sp/>size<sp/>are<sp/>filled<sp/>or<sp/>not.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1<sp/>==<sp/>flag)<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*returning<sp/>address<sp/>of<sp/>allocated<sp/>block.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr<sp/>+<sp/>(blockNumber*size);<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>check_for_space-<sp/>This<sp/>function<sp/>will<sp/>checks<sp/>for<sp/>particular<sp/>size<sp/>block<sp/>and<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>returns<sp/>the<sp/>address<sp/>of<sp/>one<sp/>block<sp/>of<sp/>particular<sp/>size</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size<sp/>-<sp/>Size<sp/>requested<sp/>by<sp/>user</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>ptr<sp/>-<sp/>address<sp/>of<sp/>first<sp/>free<sp/>block<sp/>of<sp/>size<sp/>nearer<sp/>to<sp/>given<sp/>by<sp/>user</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="memory_management_8h_1aea43d1dfada1be33a518865f1dfec034" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8c_1aea43d1dfada1be33a518865f1dfec034" kindref="member">check_for_space</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" kindref="member">SIZE8</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>perform<sp/>alloc<sp/>to<sp/>get<sp/>address<sp/>of<sp/>some<sp/>block<sp/>of<sp/>particular<sp/>size*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" kindref="member">START_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" kindref="member">END_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" kindref="member">INITIAL_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" kindref="member">SIZE8</ref><sp/>);<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>block<sp/>of<sp/>particular<sp/>size<sp/>is<sp/>not<sp/>available<sp/>it<sp/>will<sp/>request<sp/>for<sp/>higher<sp/>size<sp/>block*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" kindref="member">SIZE16</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" kindref="member">START_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" kindref="member">END_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" kindref="member">INITIAL_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" kindref="member">SIZE16</ref><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" kindref="member">SIZE32</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" kindref="member">START_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" kindref="member">END_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" kindref="member">INITIAL_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" kindref="member">SIZE32</ref><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" kindref="member">SIZE64</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" kindref="member">START_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" kindref="member">END_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" kindref="member">INITIAL_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" kindref="member">SIZE64</ref><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" kindref="member">SIZE128</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" kindref="member">START_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" kindref="member">END_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" kindref="member">INITIAL_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" kindref="member">SIZE128</ref><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" kindref="member">SIZE256</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" kindref="member">START_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" kindref="member">END_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" kindref="member">INITIAL_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" kindref="member">SIZE256</ref><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" kindref="member">SIZE512</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" kindref="member">START_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" kindref="member">END_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" kindref="member">INITIAL_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" kindref="member">SIZE512</ref><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" kindref="member">SIZE1024</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" kindref="member">START_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" kindref="member">END_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" kindref="member">INITIAL_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" kindref="member">SIZE1024</ref><sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/><ref refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" kindref="member">SIZE2048</ref><sp/>&amp;&amp;<sp/>currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=<ref refid="memory_management_8c_1aaa1cfd5c78cb649d31cdcf5056523f9c" kindref="member">perform_alloc</ref>(<sp/><ref refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" kindref="member">START_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" kindref="member">END_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" kindref="member">INITIAL_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" kindref="member">SIZE2048</ref><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/>=<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*If<sp/>user<sp/>requires<sp/>size<sp/>greater<sp/>than<sp/>500<sp/>then<sp/>seperate<sp/>space<sp/>is<sp/>also<sp/>available*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentStatus<sp/><sp/>==<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ptr=NULL;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/>user.<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size<sp/>-<sp/>It<sp/>takes<sp/>size<sp/>as<sp/>arguement<sp/>from<sp/>user.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>It<sp/>returns<sp/>NULL<sp/>if<sp/>it<sp/>can&apos;t<sp/>give<sp/>user<sp/>required<sp/>memory<sp/>or<sp/>it<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>base<sp/>address<sp/>of<sp/>the<sp/>memory<sp/>which<sp/>it<sp/>allocates<sp/>to<sp/>user<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamically.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" kindref="member">memory_alloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="comment">/*if<sp/>users<sp/>ask<sp/>for<sp/>size<sp/>0<sp/>or<sp/>less<sp/>it<sp/>prints<sp/>error<sp/>and<sp/>returns*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>Size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="memory_management_8c_1aea43d1dfada1be33a518865f1dfec034" kindref="member">check_for_space</ref>(size);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>frees<sp/>the<sp/>space<sp/>allocated<sp/>for<sp/>the<sp/>user<sp/>in<sp/>the<sp/>created<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap<sp/>space<sp/>under<sp/>user&apos;s<sp/>request.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>void<sp/>pointer<sp/>,the<sp/>pointer<sp/>holding<sp/>the<sp/>address<sp/>to<sp/>be<sp/>freed<sp/>.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>Always<sp/>returns<sp/>TRUE<sp/>as<sp/>status.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="memory_management_8h_1a8a12d29f1824bf7225965e8b35a0f3a8" refkind="member"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8c_1a8a12d29f1824bf7225965e8b35a0f3a8" kindref="member">memory_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/>currentStatus<sp/>=<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" kindref="member">INITIAL_LENGTH_SIZE8</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a5a31221b432ad5a360476010f3d786fe" kindref="member">MAX_LENGTH_SIZE8</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" kindref="member">START_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" kindref="member">INITIAL_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" kindref="member">SIZE8</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" kindref="member">INITIAL_LENGTH_SIZE16</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aec5f54b4ff5ea97b1bb298318f9bef2b" kindref="member">MAX_LENGTH_SIZE16</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" kindref="member">START_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" kindref="member">INITIAL_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" kindref="member">SIZE16</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" kindref="member">INITIAL_LENGTH_SIZE32</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ac309e3185598c14710f7e86e9a8d7eac" kindref="member">MAX_LENGTH_SIZE32</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" kindref="member">START_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" kindref="member">INITIAL_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" kindref="member">SIZE32</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" kindref="member">INITIAL_LENGTH_SIZE64</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a994f4c90c9aa7d6901408d390a58a461" kindref="member">MAX_LENGTH_SIZE64</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" kindref="member">START_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" kindref="member">INITIAL_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" kindref="member">SIZE64</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" kindref="member">INITIAL_LENGTH_SIZE128</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a1495561797b4fc61bbbb796b5cfea87c" kindref="member">MAX_LENGTH_SIZE128</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" kindref="member">START_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" kindref="member">INITIAL_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" kindref="member">SIZE128</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" kindref="member">INITIAL_LENGTH_SIZE256</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6af89ae77a299e48140b132936410d92" kindref="member">MAX_LENGTH_SIZE256</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" kindref="member">START_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" kindref="member">INITIAL_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" kindref="member">SIZE256</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" kindref="member">INITIAL_LENGTH_SIZE512</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a584ba52d3a0818ea3c54119df40d1b56" kindref="member">MAX_LENGTH_SIZE512</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" kindref="member">START_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" kindref="member">INITIAL_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" kindref="member">SIZE512</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" kindref="member">INITIAL_LENGTH_SIZE1024</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a31a9021f5d3473e2c0f34758cce8c1c4" kindref="member">MAX_LENGTH_SIZE1024</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" kindref="member">START_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" kindref="member">INITIAL_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" kindref="member">SIZE1024</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" kindref="member">INITIAL_LENGTH_SIZE2048</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ad1a88036d0e1dbeb28757b82db95603f" kindref="member">MAX_LENGTH_SIZE2048</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(<sp/><ref refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" kindref="member">START_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" kindref="member">INITIAL_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" kindref="member">SIZE2048</ref><sp/>,<sp/>pointer<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentStatus<sp/><sp/>=<sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentStatus<sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>low<sp/>the<sp/>bit<sp/>so<sp/>that<sp/>slot<sp/>is<sp/>freed<sp/>,this<sp/>process</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>happens<sp/>when<sp/>memory_free<sp/>function<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>minimum<sp/>-<sp/>Starting<sp/>slot<sp/>of<sp/>Particular<sp/>size.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>start<sp/>-<sp/><sp/><sp/>Starting<sp/>block<sp/>of<sp/>particular<sp/>size.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>ptr-<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>be<sp/>freed.<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size<sp/><sp/>-<sp/><sp/><sp/>Block<sp/>size<sp/>used.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>Param[out]<sp/>-<sp/>status<sp/>-<sp/><sp/>Always<sp/>returns<sp/>TRUE<sp/>as<sp/>status.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="memory_management_8h_1a163c8fc7314dff46f38171fe7e652ade" refkind="member"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8c_1a163c8fc7314dff46f38171fe7e652ade" kindref="member">delete_pointer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimum<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pointer;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits=255;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0<sp/>,<sp/>block<sp/>=<sp/>0<sp/>,<sp/>slot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pointer<sp/>-<sp/>&amp;totalMemoryArea[start];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>result<sp/>/<sp/>size;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>block<sp/>=<sp/>result<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>slot<sp/>=<sp/>result<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>bits<sp/>^=<sp/>(-0<sp/>^<sp/>bits)<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>slot);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>totalMemoryArea[minimum+block]<sp/>=<sp/>totalMemoryArea[minimum+block]<sp/>&amp;<sp/>bits;<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/>user<sp/>in<sp/>asked<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks<sp/>of<sp/>specified<sp/>size<sp/>and<sp/>intialise<sp/>them<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>nelem<sp/>=<sp/>number<sp/>of<sp/>blocks,elsize<sp/>=<sp/>size<sp/>requested<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>It<sp/>returns<sp/>NULL<sp/>if<sp/>it<sp/>can&apos;t<sp/>give<sp/>user<sp/>required<sp/>memory<sp/>or<sp/>it<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>base<sp/>address<sp/>of<sp/>the<sp/>memory<sp/>which<sp/>it<sp/>allocates<sp/>to<sp/>user<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamically.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="memory_management_8h_1a9fddae3713297adcee22fae422fe4383" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8c_1a9fddae3713297adcee22fae422fe4383" kindref="member">memory_calloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elsize)<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>nelem<sp/>*<sp/>elsize;<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nelem<sp/>&lt;=<sp/>0<sp/>||<sp/>elsize<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/><ref refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" kindref="member">memory_alloc</ref>(size);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ptr,<sp/>0,<sp/>size);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>reallocates<sp/>memory<sp/>to<sp/>the<sp/>previously<sp/>allocated<sp/>memory<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>by<sp/>asking<sp/>the<sp/>user<sp/>,the<sp/>already<sp/>allocated<sp/>pointer<sp/>and<sp/>size</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>allocated.<sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>pointer<sp/>to<sp/>be<sp/>realocated<sp/>and<sp/>size<sp/>to<sp/>be<sp/>allocated.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>It<sp/>returns<sp/>NULL<sp/>if<sp/>it<sp/>can&apos;t<sp/>give<sp/>user<sp/>required<sp/>memory<sp/>or<sp/>it<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>base<sp/>address<sp/>of<sp/>the<sp/>memory<sp/>which<sp/>it<sp/>allocates<sp/>to<sp/>user<sp/></highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamically.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="memory_management_8c_1aeae46c0f1bc40e0e3b469f40feefd8d0" kindref="member">memory_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/><ref refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" kindref="member">memory_alloc</ref>(size);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="memory_management_8c_1a3e2309af44a44009e20dea96b76a5f06" kindref="member">memory_size</ref>(ptr)<sp/>&lt;<sp/>size)<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/><ref refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" kindref="member">memory_alloc</ref>(size);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/>ptr,<sp/><ref refid="memory_management_8c_1a3e2309af44a44009e20dea96b76a5f06" kindref="member">memory_size</ref>(ptr));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="memory_management_8c_1a8a12d29f1824bf7225965e8b35a0f3a8" kindref="member">memory_free</ref>(ptr);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>This<sp/>function<sp/>tells<sp/>memory<sp/>size<sp/>of<sp/>block<sp/>used<sp/>by<sp/>particular<sp/>pointer</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>ptr<sp/>-<sp/>it<sp/>is<sp/>pointer<sp/>whose<sp/>size<sp/>this<sp/>function<sp/>will<sp/>return</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>currentsize<sp/>-<sp/>size<sp/>used<sp/>by<sp/>pointer</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="memory_management_8h_1a3e2309af44a44009e20dea96b76a5f06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1a3e2309af44a44009e20dea96b76a5f06" kindref="member">memory_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6882776ff546dc78d6eb192782c04726" kindref="member">INITIAL_LENGTH_SIZE8</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a5a31221b432ad5a360476010f3d786fe" kindref="member">MAX_LENGTH_SIZE8</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1aee573b883518260a48d5e5859eb67700" kindref="member">SIZE8</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aa54fe86781c9274a8b4826ddcf149ce4" kindref="member">INITIAL_LENGTH_SIZE16</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aec5f54b4ff5ea97b1bb298318f9bef2b" kindref="member">MAX_LENGTH_SIZE16</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1a0feb4c9d3655c1f4cc571c001ffbf98d" kindref="member">SIZE16</ref>;<sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ac7eb7c350e8e057898c62a31083863dd" kindref="member">INITIAL_LENGTH_SIZE32</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ac309e3185598c14710f7e86e9a8d7eac" kindref="member">MAX_LENGTH_SIZE32</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1ae8fb92f2869c13efccdf7932b67311d2" kindref="member">SIZE32</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a56fa454329b11df943953c4f665e1e7b" kindref="member">INITIAL_LENGTH_SIZE64</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a994f4c90c9aa7d6901408d390a58a461" kindref="member">MAX_LENGTH_SIZE64</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1ae9c1e737f774b22d3ef5dc32e7c74639" kindref="member">SIZE64</ref>;<sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aca91788276caef0abea30327b94a91a3" kindref="member">INITIAL_LENGTH_SIZE128</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a1495561797b4fc61bbbb796b5cfea87c" kindref="member">MAX_LENGTH_SIZE128</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1ac769905d29a0721a496c954d5a521a88" kindref="member">SIZE128</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a90688b443518c2111772b264985c78b7" kindref="member">INITIAL_LENGTH_SIZE256</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6af89ae77a299e48140b132936410d92" kindref="member">MAX_LENGTH_SIZE256</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1ad7a598f0d1b7049e2ef4f137b30d90df" kindref="member">SIZE256</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a7ee9ee9208e5d413960d0197756b86f1" kindref="member">INITIAL_LENGTH_SIZE512</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a584ba52d3a0818ea3c54119df40d1b56" kindref="member">MAX_LENGTH_SIZE512</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1a11a83fb1f003909dc61b3347346d2f0f" kindref="member">SIZE512</ref>;<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a6a01fe111aff09aaf870f1f5eb7188f4" kindref="member">INITIAL_LENGTH_SIZE1024</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1a31a9021f5d3473e2c0f34758cce8c1c4" kindref="member">MAX_LENGTH_SIZE1024</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1afc256d6d9b1c3d78c147ab6ccacc7e8a" kindref="member">SIZE1024</ref>;<sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1aa9fb14eb11923e5cef3b2f09f4b9a30f" kindref="member">INITIAL_LENGTH_SIZE2048</ref>]<sp/>&lt;=<sp/>pointer)<sp/>&amp;&amp;<sp/>(&amp;totalMemoryArea[<ref refid="memory_management_8h_1ad1a88036d0e1dbeb28757b82db95603f" kindref="member">MAX_LENGTH_SIZE2048</ref>]<sp/>&gt;=<sp/>pointer)<sp/>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/><ref refid="memory_management_8h_1ae9104ca82f0735111c65ef2943c99966" kindref="member">SIZE2048</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSize=0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentSize;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>block_information-This<sp/>function<sp/>used<sp/>to<sp/>display<sp/>the<sp/>satus<sp/>of<sp/>all</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>type<sp/>of<sp/>blocks,How<sp/>many<sp/>blocks<sp/>of<sp/>which<sp/>size<sp/><sp/>is<sp/>used<sp/>and<sp/>how<sp/>may<sp/>blocks</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>are<sp/>free<sp/>and<sp/>how<sp/>much<sp/>percentage<sp/>of<sp/>blocks<sp/>of<sp/>every<sp/>type<sp/>is<sp/>free.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>Return-<sp/>The<sp/>status<sp/>of<sp/>function<sp/>true<sp/>or<sp/>false.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="memory_management_8h_1a9961d9a3b8f1cab8d2801a51cac018c1" refkind="member"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8c_1a9961d9a3b8f1cab8d2801a51cac018c1" kindref="member">block_information</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>count<sp/>=<sp/>8<sp/><sp/>,<sp/>kount<sp/>,<sp/>totalUsed=0,<sp/>totalFree=0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/>Size\t\tUsed_Blocks\t\tFree_Blocks\tPercent_Of_Used_Blocks\n----------------------------------------------------------------------------<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(kount<sp/>=<sp/>1;<sp/>kount<sp/>&lt;=<sp/>9<sp/>;<sp/>kount++)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/>%d\t\t%d\t\t\t%d\t\t%f&quot;</highlight><highlight class="normal">,<sp/>count<sp/>,<sp/><ref refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" kindref="member">used_blocks</ref><sp/>(<sp/>count<sp/>),<sp/><ref refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" kindref="member">unused_blocks</ref><sp/>(<sp/>count<sp/>),(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(<ref refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" kindref="member">used_blocks</ref><sp/>(<sp/>count<sp/>)*100)/(<ref refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" kindref="member">used_blocks</ref><sp/>(<sp/>count<sp/>)+<ref refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" kindref="member">unused_blocks</ref><sp/>(<sp/>count<sp/>)));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>totalUsed+=<ref refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" kindref="member">used_blocks</ref>(count);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>totalFree+=<ref refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" kindref="member">unused_blocks</ref>(count);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><sp/>count<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n----------------------------------------------------------------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/>Total\t\t%d\t\t\t%d&quot;</highlight><highlight class="normal">,totalUsed,totalFree);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n----------------------------------------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>used_block-<sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>find<sp/>out<sp/>the<sp/>number<sp/>of<sp/>used<sp/>blocks</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>giving<sp/>the<sp/>size<sp/>of<sp/>block.<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>total<sp/>number<sp/>of<sp/>used<sp/>blocks.</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="memory_management_8h_1a8758c4e9207b46696939c497d7688b74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1a8758c4e9207b46696939c497d7688b74" kindref="member">used_blocks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocks;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>8)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" kindref="member">START_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" kindref="member">END_LENGTH_SIZE8</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" kindref="member">START_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" kindref="member">END_LENGTH_SIZE16</ref>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>32)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" kindref="member">START_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" kindref="member">END_LENGTH_SIZE32</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>64)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" kindref="member">START_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" kindref="member">END_LENGTH_SIZE64</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>128)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" kindref="member">START_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" kindref="member">END_LENGTH_SIZE128</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>256)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" kindref="member">START_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" kindref="member">END_LENGTH_SIZE256</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>512)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" kindref="member">START_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" kindref="member">END_LENGTH_SIZE512</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1024)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" kindref="member">START_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" kindref="member">END_LENGTH_SIZE1024</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>2048)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(<ref refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" kindref="member">START_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" kindref="member">END_LENGTH_SIZE2048</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocks;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>calulate_block-This<sp/>function<sp/>counts<sp/>the<sp/>number<sp/>of<sp/>used<sp/>blocks<sp/>of<sp/>given<sp/></highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>maximum<sp/>and<sp/>minimum<sp/>block<sp/>number<sp/>of<sp/>respective<sp/>size.</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>total<sp/>count<sp/>of<sp/>used<sp/>blocks.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="memory_management_8h_1ab62a2cbf81f6577db0668f46aed364ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1ab62a2cbf81f6577db0668f46aed364ef" kindref="member">calculate_blocks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimum<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maximum)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/>index2,<sp/>result<sp/>=<sp/>0,<sp/>end,<sp/>slotNumber;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>maximum<sp/>-<sp/>minimum<sp/>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index2<sp/>=<sp/>0<sp/>;<sp/>index2<sp/>&lt;=<sp/>end<sp/>;<sp/>index2++<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index1<sp/>=<sp/>0<sp/>;<sp/>index1<sp/>&lt;<sp/>8<sp/>;<sp/>index1++<sp/>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotNumber<sp/>=<sp/>minimum<sp/>+<sp/>index2;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((totalMemoryArea[slotNumber]<sp/>&amp;<sp/>1&lt;&lt;index1)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>free_block_information-This<sp/>function<sp/>used<sp/>to<sp/>display<sp/>the<sp/>satus<sp/>of<sp/>all</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>type<sp/>of<sp/>blocks,How<sp/>many<sp/>blocks<sp/>of<sp/>which<sp/>size<sp/><sp/>is<sp/>free<sp/>and<sp/>how<sp/>many<sp/>blocks<sp/></highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>and<sp/>how<sp/>much<sp/>percentage<sp/>of<sp/>blocks<sp/>of<sp/>every<sp/>type<sp/>is<sp/>free.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>Return-<sp/>The<sp/>status<sp/>of<sp/>function<sp/>true<sp/>or<sp/>false.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8h_1a088ff8aff3fbfc997ad69afced4574c8" kindref="member">free_block_information</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>8<sp/>,<sp/>unUsedBlocks<sp/>=<sp/>0<sp/>,<sp/>kount<sp/>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(kount<sp/>=<sp/>1;<sp/>kount<sp/>&lt;=<sp/>9<sp/>;<sp/>kount++)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>unUsedBlocks<sp/>=<sp/><ref refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" kindref="member">unused_blocks</ref><sp/>(<sp/>k<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;\nunUsed<sp/>blocks<sp/>of<sp/>size<sp/>%d<sp/>:<sp/>%d&quot;,<sp/>k<sp/>,<sp/>unUsedBlocks);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/><sp/>k<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>unused_block-<sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>find<sp/>out<sp/>the<sp/>number<sp/>of<sp/>unused<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>blocks<sp/>giving<sp/>the<sp/>size<sp/>of<sp/>block.<sp/></highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>size</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>the<sp/>total<sp/>number<sp/>of<sp/>unused<sp/>blocks.</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="memory_management_8h_1a84a886fa82e1e3db2ab9e16c3a3b1434" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1a84a886fa82e1e3db2ab9e16c3a3b1434" kindref="member">unused_blocks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocks;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>8)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a8a5cbd0409f2d6df8561b1bb395a7f46" kindref="member">START_LENGTH_SIZE8</ref><sp/>,<sp/><ref refid="memory_management_8h_1a6af6fefe4b22528911f2ce074fb975a4" kindref="member">END_LENGTH_SIZE8</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>16)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a2f29c04238fb0c1f4a7ec6c9bf9f6944" kindref="member">START_LENGTH_SIZE16</ref><sp/>,<sp/><ref refid="memory_management_8h_1a3b353c267661a15d55f52511dceff059" kindref="member">END_LENGTH_SIZE16</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>32)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a29b32c59a32f53431c6f431a1bd019fb" kindref="member">START_LENGTH_SIZE32</ref><sp/>,<sp/><ref refid="memory_management_8h_1a5f9a300d4d1fb14f439a2e162cd4158e" kindref="member">END_LENGTH_SIZE32</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>64)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1ab9da1bb704226b0a20de81f1f5a77267" kindref="member">START_LENGTH_SIZE64</ref><sp/>,<sp/><ref refid="memory_management_8h_1aaf1f709910644fb6fb9d661a0fae62b3" kindref="member">END_LENGTH_SIZE64</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>128)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a6b18aa93bd5b19fb60d8d909915a4f5f" kindref="member">START_LENGTH_SIZE128</ref><sp/>,<sp/><ref refid="memory_management_8h_1a77a1a07cb6579370e1099f1dfa289f7e" kindref="member">END_LENGTH_SIZE128</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>256)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1ae4c0b0fa2b86d8d809b6da282ec30a14" kindref="member">START_LENGTH_SIZE256</ref><sp/>,<sp/><ref refid="memory_management_8h_1aefbb31124611a832256505b7d2a5a7aa" kindref="member">END_LENGTH_SIZE256</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>512)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a543a9998e3811f5715ed9f7d4d3b8ff6" kindref="member">START_LENGTH_SIZE512</ref><sp/>,<sp/><ref refid="memory_management_8h_1a49d1beaf8d6485612e2feb9502a86c6a" kindref="member">END_LENGTH_SIZE512</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>1024)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1af813417d82cdcd72cf5d7e4d7a659d06" kindref="member">START_LENGTH_SIZE1024</ref><sp/>,<sp/><ref refid="memory_management_8h_1a734ff1bf94e71b8c9146b544f4600269" kindref="member">END_LENGTH_SIZE1024</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>==<sp/>2048)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks<sp/>=<sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(<ref refid="memory_management_8h_1a0f7aee3abb937b3fa8312010bf97d73c" kindref="member">START_LENGTH_SIZE2048</ref><sp/>,<sp/><ref refid="memory_management_8h_1ab27dfaffd34f4f946ed6c1201b0ecde6" kindref="member">END_LENGTH_SIZE2048</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocks;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/>API<sp/>DEFINITION</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>Brief<sp/>-<sp/>calulate_free_block-This<sp/>function<sp/>counts<sp/>the<sp/>number<sp/>of<sp/>usused<sp/>blocks<sp/>of<sp/></highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>given<sp/>size.</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>Param[in]<sp/><sp/>-<sp/>maximum<sp/>and<sp/>minimum<sp/>block<sp/>number<sp/>of<sp/>respective<sp/>size.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>Return<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>total<sp/>count<sp/>of<sp/>unused<sp/>blocks.</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="memory_management_8h_1a156fe06c8c22c3783995e8c2ea0621b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8c_1a156fe06c8c22c3783995e8c2ea0621b9" kindref="member">calculate_free_blocks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimum<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maximum)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1,<sp/>index2,<sp/>result<sp/>=<sp/>0,<sp/>end,<sp/>slotNumber;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>maximum<sp/>-<sp/>minimum<sp/>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index2<sp/>=<sp/>0<sp/>;<sp/>index2<sp/>&lt;=<sp/>end<sp/>;<sp/>index2++<sp/>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>index1<sp/>=<sp/>0<sp/>;<sp/>index1<sp/>&lt;<sp/>8<sp/>;<sp/>index1++<sp/>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotNumber<sp/>=<sp/>minimum<sp/>+<sp/>index2;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((totalMemoryArea[slotNumber]<sp/>&amp;<sp/>1&lt;&lt;index1)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>REVISION<sp/>HISTORY:</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/>Rev<sp/>1.1<sp/><sp/><sp/>SEP<sp/>24<sp/>2015<sp/>09:55:00<sp/><sp/><sp/>Rohit<sp/>Kumar</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation2/src/memoryManagement.c"/>
  </compounddef>
</doxygen>
