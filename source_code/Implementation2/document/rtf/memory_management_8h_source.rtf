{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memoryManagement.h\par \pard\plain 
{\tc\tcl2 \v lib/memoryManagement.h}
{\xe \v lib/memoryManagement.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 /*******************************************************************************                                      \par
    2  *                        memoryManagement.h\par
    3  * Copyright(C) 2006.MindTree Pvt. Ltd. All rights reserved.\par
    4  *\par
    5  * Revision : V1.0\par
    6  *\par
    7  * Last Modified Date    Authors                         Description\par
    8  *\par
    9  * 24-SEP-2015           Prathyusha A.N.V.S              Initial version\par
   10  *                       Deepak Birla\par
   11  *           Rohit Kumar\par
   12  *           Dhyaneswaran DG\par
   13  ******************************************************************************/\par
   14 /*******************************************************************************\par
   15  * @file memoryManagement.h\par
   16  * The main properties of this algorithm is:\par
   17  * The total memory is divided in to two major part one part is used to manage \par
   18    the data structure and other part is used for operation.A very less memory \par
   19    has been used to manage the data.\par
   20    The major part is further divided in to 10 blocks-\par
   21    Blocks of 8 byte,16 byte,32 byte,64 byte,128 byte,256 byte,512 byte,\par
   22    1024 byte,2048 byte and Last block is of not specified byte it is defined \par
   23    as other area.\par
   24    For memory <= 8 byte memory is allocated from blocks of 8 byte.\par
   25    For memory <= 16 byte memory is allocated from blocks of 16 byte.\par
   26    and so on,if memory is greater than 2048 byte it will we given from other area.\par
   27  * SIZE can be changed and full memory architecture will be defined according to \par
   28    the given SIZE.The percentage of the size of blocks of 8,16,32...2048 bytes will \par
   29    be same,The number of blocks depend on SIZE.   \par
   30  * one bit space are used for maintaining the status of blocks,to show whether it \par
   31    is filled or not.\par
   32  * Less than 1% of total memory is used for maintaing the status.\par
   33  * Every calculation are done using MACRO.\par
   34  * one more function is defined to dispaly the allocated and free memory.\par
   35  * Initially the SIZE is defined as 1 MB and We can change the SIZE according to \par
   36    users need.\par
   37  *This program has the library functions for allocating memory,\par
   38            deallocating memory and displaying the size of free memory and \par
   39        allocated memory.\par
   40 \par
   41    *memory_alloc function - This function provides memory dynamically to \par
   42                         user.  \par
   43 \par
   44    *memory_free function - This function frees the space allocated for the\par
   45                user in the created heap space under user's \par
   46                            request.\par
   47 \par
   48    *memory_calloc function - This function provides memory dynamically to \par
   49                              user in asked number of blocks of specified \par
   50                              size and intialise them to zero.\par
   51 \par
   52    *memory_realloc function - This function reallocates memory to the \par
   53                           previously allocated memory pointer by asking  \par
   54                               the user ,the already allocated pointer and  \par
   55                               size to be allocated.\par
   56 \par
   57  ******************************************************************************/\par
   58 \par
   59 #ifndef MEMORYMANAGEMENT_H_\par
   60 #define MEMORYMANAGEMENT_H_\par
   61 \par
   62 /*******************************************************************************\par
   63  * Include files\par
   64  ******************************************************************************/\par
   65 \par
   66 #include<stdio.h>\par
   67 #include<stdlib.h>\par
   68 #include<string.h>\par
   69 #include<time.h>\par
   70 \par
   71 /*******************************************************************************\par
   72  * MACRO DEFINITION\par
   73  ******************************************************************************/\par
   74 \par
   75 #define START                             0\par
   76 #define SIZE                              1  \par
   77 /* SIZE defines the total memory used for heap in MB.\par
   78  * here we are using memory of size 1 MB.\par
   79  */\par
   80 #define SIZE8                             8\par
   81 #define SIZE16                            16\par
   82 #define SIZE32                            32\par
   83 #define SIZE64                            64\par
   84 #define SIZE128                           128\par
   85 #define SIZE256                           256\par
   86 #define SIZE512                           512\par
   87 #define SIZE1024                          1024\par
   88 #define SIZE2048                          2048\par
   89 #define ALL                               0\par
   90 #define TOTAL_BLOCKS_OF_SIZE_SIZE8        2048*SIZE\par
   91 #define TOTAL_BLOCKS_OF_SIZE_SIZE16       2048*SIZE\par
   92 #define TOTAL_BLOCKS_OF_SIZE_SIZE32       1024*SIZE\par
   93 #define TOTAL_BLOCKS_OF_SIZE_SIZE64       1024*SIZE\par
   94 #define TOTAL_BLOCKS_OF_SIZE_SIZE128      512*SIZE\par
   95 #define TOTAL_BLOCKS_OF_SIZE_SIZE256      512*SIZE\par
   96 #define TOTAL_BLOCKS_OF_SIZE_SIZE512      256*SIZE\par
   97 #define TOTAL_BLOCKS_OF_SIZE_SIZE1024     256*SIZE\par
   98 #define TOTAL_BLOCKS_OF_SIZE_SIZE2048     128*SIZE\par
   99 #define TOTAL_BLOCKS                      TOTAL_BLOCKS_OF_SIZE_SIZE8+TOTAL_BLOCKS_OF_SIZE_SIZE16+TOTAL_BLOCKS_OF_SIZE_SIZE32+TOTAL_BLOCKS_OF_SIZE_SIZE64+TOTAL_BLOCKS_OF_SIZE_SIZE128+TOTAL_BLOCKS_OF_SIZE_SIZE256+TOTAL_BLOCKS_OF_SIZE_SIZE512+TOTAL_BLOCKS_OF_SIZE_SIZE1024+TOTAL_BLOCKS_OF_SIZE_SIZE2048\par
  100 #define TOTAL_BYTES                       TOTAL_BLOCKS/8\par
  101 #define BIT_AREA_MIN                      START\par
  102 #define START_LENGTH_SIZE8                BIT_AREA_MIN\par
  103 #define END_LENGTH_SIZE8                  START_LENGTH_SIZE8+TOTAL_BLOCKS_OF_SIZE_SIZE8/8-1\par
  104 #define START_LENGTH_SIZE16               END_LENGTH_SIZE8+1\par
  105 #define END_LENGTH_SIZE16                 START_LENGTH_SIZE16+TOTAL_BLOCKS_OF_SIZE_SIZE16/8-1\par
  106 #define START_LENGTH_SIZE32               END_LENGTH_SIZE16+1\par
  107 #define END_LENGTH_SIZE32                 START_LENGTH_SIZE32+TOTAL_BLOCKS_OF_SIZE_SIZE32/8-1\par
  108 #define START_LENGTH_SIZE64               END_LENGTH_SIZE32+1\par
  109 #define END_LENGTH_SIZE64                 START_LENGTH_SIZE64+TOTAL_BLOCKS_OF_SIZE_SIZE64/8-1\par
  110 #define START_LENGTH_SIZE128              END_LENGTH_SIZE64+1\par
  111 #define END_LENGTH_SIZE128                START_LENGTH_SIZE128+TOTAL_BLOCKS_OF_SIZE_SIZE128/8-1\par
  112 #define START_LENGTH_SIZE256              END_LENGTH_SIZE128+1\par
  113 #define END_LENGTH_SIZE256                START_LENGTH_SIZE256+TOTAL_BLOCKS_OF_SIZE_SIZE256/8-1\par
  114 #define START_LENGTH_SIZE512              END_LENGTH_SIZE256+1\par
  115 #define END_LENGTH_SIZE512                START_LENGTH_SIZE512+TOTAL_BLOCKS_OF_SIZE_SIZE512/8-1\par
  116 #define START_LENGTH_SIZE1024             END_LENGTH_SIZE512+1\par
  117 #define END_LENGTH_SIZE1024               START_LENGTH_SIZE1024+TOTAL_BLOCKS_OF_SIZE_SIZE1024/8-1\par
  118 #define START_LENGTH_SIZE2048             END_LENGTH_SIZE1024+1\par
  119 #define END_LENGTH_SIZE2048               START_LENGTH_SIZE2048+TOTAL_BLOCKS_OF_SIZE_SIZE2048/8-1\par
  120 #define BIT_AREA_MAX                      TOTAL_BYTES-1\par
  121 #define INITIAL_LENGTH_SIZE8              BIT_AREA_MAX+1\par
  122 #define MAX_LENGTH_SIZE8                  INITIAL_LENGTH_SIZE8+SIZE8*TOTAL_BLOCKS_OF_SIZE_SIZE8-1\par
  123 #define INITIAL_LENGTH_SIZE16             MAX_LENGTH_SIZE8+1\par
  124 #define MAX_LENGTH_SIZE16                 INITIAL_LENGTH_SIZE16+SIZE16*TOTAL_BLOCKS_OF_SIZE_SIZE16-1\par
  125 #define INITIAL_LENGTH_SIZE32             MAX_LENGTH_SIZE16+1\par
  126 #define MAX_LENGTH_SIZE32                 INITIAL_LENGTH_SIZE32+SIZE32*TOTAL_BLOCKS_OF_SIZE_SIZE32-1\par
  127 #define INITIAL_LENGTH_SIZE64             MAX_LENGTH_SIZE32+1\par
  128 #define MAX_LENGTH_SIZE64                 INITIAL_LENGTH_SIZE64+SIZE64*TOTAL_BLOCKS_OF_SIZE_SIZE64-1\par
  129 #define INITIAL_LENGTH_SIZE128            MAX_LENGTH_SIZE64+1\par
  130 #define MAX_LENGTH_SIZE128                INITIAL_LENGTH_SIZE128+SIZE128*TOTAL_BLOCKS_OF_SIZE_SIZE128-1\par
  131 #define INITIAL_LENGTH_SIZE256            MAX_LENGTH_SIZE128+1\par
  132 #define MAX_LENGTH_SIZE256                INITIAL_LENGTH_SIZE256+SIZE256*TOTAL_BLOCKS_OF_SIZE_SIZE256-1\par
  133 #define INITIAL_LENGTH_SIZE512            MAX_LENGTH_SIZE256+1\par
  134 #define MAX_LENGTH_SIZE512                INITIAL_LENGTH_SIZE512+SIZE512*TOTAL_BLOCKS_OF_SIZE_SIZE512-1\par
  135 #define INITIAL_LENGTH_SIZE1024           MAX_LENGTH_SIZE512+1\par
  136 #define MAX_LENGTH_SIZE1024               INITIAL_LENGTH_SIZE1024+SIZE1024*TOTAL_BLOCKS_OF_SIZE_SIZE1024-1\par
  137 #define INITIAL_LENGTH_SIZE2048           MAX_LENGTH_SIZE1024+1\par
  138 #define MAX_LENGTH_SIZE2048               INITIAL_LENGTH_SIZE2048+SIZE2048*TOTAL_BLOCKS_OF_SIZE_SIZE2048-1\par
  139 #define INITIAL_LENGTH_REMAINING          MAX_LENGTH_SIZE2048+1\par
  140 #define MAX_LENGTH                        1024*2048\par
  141 \par
  142 /*******************************************************************************\par
  143  * ENUM DEFINITION\par
  144  ******************************************************************************/\par
  145 \par
  146 typedef enum {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
\par
  147 \{\par
  148 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAC" }{}}{\fldrslt {\cs37\ul\cf2 TRUE}}}
,\par
  149 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 FALSE}}}
\par
  150 \}{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
;\par
  151 \par
  152 /*******************************************************************************\par
  153  * EXTERNAL VARIABLE DECLARATION\par
  154  ******************************************************************************/\par
  155 \par
  156 static unsigned char totalMemoryArea[1024*1024*{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAE" }{}}{\fldrslt {\cs37\ul\cf2 SIZE}}}
];\par
  157 \par
  158 /*******************************************************************************\par
  159  * API DECLARATION\par
  160  ******************************************************************************/\par
  161 void *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAF" }{}}{\fldrslt {\cs37\ul\cf2 check_for_space}}}
(int size);\par
  162 void *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAG" }{}}{\fldrslt {\cs37\ul\cf2 memory_alloc}}}
(int size);  \par
  163 void *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAH" }{}}{\fldrslt {\cs37\ul\cf2 memory_calloc}}}
(int nelem, int elsize);\par
  164 void *{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAI" }{}}{\fldrslt {\cs37\ul\cf2 memory_realloc}}}
(void * ptr, int size);\par
  165 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAJ" }{}}{\fldrslt {\cs37\ul\cf2 memory_size}}}
(void *ptr);\par
  166 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAK" }{}}{\fldrslt {\cs37\ul\cf2 used_blocks}}}
(int size);\par
  167 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAL" }{}}{\fldrslt {\cs37\ul\cf2 unused_blocks}}}
(int size);\par
  168 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAM" }{}}{\fldrslt {\cs37\ul\cf2 perform_alloc}}}
(int minimum,int maximum , int start , int size);\par
  169 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAN" }{}}{\fldrslt {\cs37\ul\cf2 calculate_blocks}}}
(int minimum , int maximum);\par
  170 int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAO" }{}}{\fldrslt {\cs37\ul\cf2 calculate_free_blocks}}}
(int minimum , int maximum);\par
  171 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 memory_free}}}
(void *pointer);\par
  172 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAQ" }{}}{\fldrslt {\cs37\ul\cf2 delete_pointer}}}
(int minimum , int start , int size , void *ptr);\par
  173 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAR" }{}}{\fldrslt {\cs37\ul\cf2 block_information}}}
(void);\par
  174 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 status}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAS" }{}}{\fldrslt {\cs37\ul\cf2 free_block_information}}}
(void);\par
  175 /*******************************************************************************\par
  176  REVISION HISTORY:\par
  177  \par
  178   Rev 1.1   SEP 24 2015 09:55:00   Rohit Kumar\par
  179   \par
  180  ******************************************************************************/\par
  181 #endif // MEMORY_H_\par
}
}