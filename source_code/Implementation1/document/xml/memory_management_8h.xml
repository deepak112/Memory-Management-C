<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="memory_management_8h" kind="file" language="C++">
    <compoundname>memoryManagement.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="memory_management_8c" local="yes">src/memoryManagement.c</includedby>
    <includedby refid="user_8c" local="yes">src/user.c</includedby>
    <incdepgraph>
      <node id="23">
        <label>stdlib.h</label>
      </node>
      <node id="21">
        <label>lib/memoryManagement.h</label>
        <link refid="memoryManagement.h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>string.h</label>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="26">
        <label>src/memoryManagement.c</label>
        <link refid="memory_management_8c"/>
      </node>
      <node id="25">
        <label>lib/memoryManagement.h</label>
        <link refid="memoryManagement.h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/user.c</label>
        <link refid="user_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__info__area" prot="public">_info_area</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="memory_management_8h_1a0592dba56693fad79136250c11e5a7fe" prot="public" static="no">
        <name>MAX_SIZE</name>
        <initializer>1024*1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="43" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memory_management_8h_1a7a9a231e30b47bc0345749c8bd1e5077" prot="public" static="no">
        <name>MAX_LENGTH</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="44" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" prot="public" static="no">
        <name>INITIAL_ZERO</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="45" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</referencedby>
        <referencedby refid="memory_management_8h_1a4445092804b80242b5a1c124978837e8" compoundref="memory_management_8c" startline="152" endline="180">memory_information</referencedby>
        <referencedby refid="memory_management_8h_1a3e2309af44a44009e20dea96b76a5f06" compoundref="memory_management_8c" startline="330" endline="344">memory_size</referencedby>
        <referencedby refid="memory_management_8h_1a5e16e5d3309afde94b8d6f9fc6f2364a" compoundref="memory_management_8c" startline="357" endline="391">display_list</referencedby>
      </memberdef>
      <memberdef kind="define" id="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" prot="public" static="no">
        <name>EXCESS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="46" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</referencedby>
        <referencedby refid="memory_management_8h_1a4445092804b80242b5a1c124978837e8" compoundref="memory_management_8c" startline="152" endline="180">memory_information</referencedby>
        <referencedby refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</referencedby>
        <referencedby refid="memory_management_8h_1a3e2309af44a44009e20dea96b76a5f06" compoundref="memory_management_8c" startline="330" endline="344">memory_size</referencedby>
        <referencedby refid="memory_management_8h_1a5e16e5d3309afde94b8d6f9fc6f2364a" compoundref="memory_management_8c" startline="357" endline="391">display_list</referencedby>
      </memberdef>
      <memberdef kind="define" id="memory_management_8h_1a07f4c6f14c1c3bcd57756a5e3a41e3bd" prot="public" static="no">
        <name>FILLED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="47" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</referencedby>
        <referencedby refid="memory_management_8h_1a4445092804b80242b5a1c124978837e8" compoundref="memory_management_8c" startline="152" endline="180">memory_information</referencedby>
        <referencedby refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</referencedby>
      </memberdef>
      <memberdef kind="define" id="memory_management_8h_1a2b7cf2a3641be7b89138615764d60ba3" prot="public" static="no">
        <name>EMPTY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="48" column="9" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1a8a12d29f1824bf7225965e8b35a0f3a8" compoundref="memory_management_8c" startline="194" endline="205">memory_free</referencedby>
        <referencedby refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</referencedby>
        <referencedby refid="memory_management_8h_1a5e16e5d3309afde94b8d6f9fc6f2364a" compoundref="memory_management_8c" startline="357" endline="391">display_list</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" prot="public" static="no">
        <name>status</name>
        <enumvalue id="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" prot="public">
          <name>TRUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" prot="public">
          <name>FALSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="54" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="53" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="memory_management_8h_1a4f92a3e5c16c107636c7a4d1a2f05880" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char heapArea[MAX_SIZE]</definition>
        <argsstring>[MAX_SIZE]</argsstring>
        <name>heapArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="76" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="memory_management_8h_1a97e92133376f5974966a5db902e91f1c" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char infoArea[MAX_LENGTH *sizeof(struct _info_area)]</definition>
        <argsstring>[MAX_LENGTH *sizeof(struct _info_area)]</argsstring>
        <name>infoArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="77" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="memory_management_8h_1a26aeebe75887b4360c73659342f5dc61" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="78" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</referencedby>
        <referencedby refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</referencedby>
      </memberdef>
      <memberdef kind="variable" id="memory_management_8h_1ac2101dd85dcd849ee5f0a1c192015c68" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int areaIndex</definition>
        <argsstring></argsstring>
        <name>areaIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="78" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="37" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</referencedby>
        <referencedby refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</referencedby>
      </memberdef>
      <memberdef kind="variable" id="memory_management_8h_1a1aa769b6f82cf2e92f748561d87a8ca6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int sizeOfNode</definition>
        <argsstring></argsstring>
        <name>sizeOfNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="78" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="38" bodyend="-1"/>
        <referencedby refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</referencedby>
        <referencedby refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="struct__info__area" kindref="compound">_info_area</ref> *</type>
        <definition>struct _info_area* create_node</definition>
        <argsstring>(int size)</argsstring>
        <name>create_node</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="83" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="128" bodyend="139"/>
        <references refid="memory_management_8c_1a076f09d09570b6fb22632de428a3ec5e" compoundref="memory_management_8c" startline="37">areaIndex</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="memory_management_8c_1a64b0840001d30ff8cd416759a03542ce" compoundref="memory_management_8c" startline="36">in</references>
        <references refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" compoundref="memory_management_8h" startline="66">_info_area::status</references>
        <references refid="memory_management_8h_1a07f4c6f14c1c3bcd57756a5e3a41e3bd" compoundref="memory_management_8h" startline="47">FILLED</references>
        <references refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" compoundref="memory_management_8h" startline="68">_info_area::end</references>
        <references refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" compoundref="memory_management_8h" startline="46">EXCESS</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="memory_management_8c_1a7d545f1851a11aa5a292886d35957bdc" compoundref="memory_management_8c" startline="38">sizeOfNode</references>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a95bbb648d6b9dcbeb6377570f5dde789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status add_node_to_list</definition>
        <argsstring>(struct _info_area *new_node)</argsstring>
        <name>add_node_to_list</name>
        <param>
          <type>struct <ref refid="struct__info__area" kindref="compound">_info_area</ref> *</type>
          <declname>new_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="84" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="99" bodyend="115"/>
        <references refid="memory_management_8c_1addbea52120befa5218ab585272604dd5" compoundref="memory_management_8c" startline="39">current</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="55">TRUE</references>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a8a12d29f1824bf7225965e8b35a0f3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status memory_free</definition>
        <argsstring>(void *pointer)</argsstring>
        <name>memory_free</name>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="85" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="194" bodyend="205"/>
        <references refid="memory_management_8c_1a13b95480ca1ec551d303fb6b31b5ee9d" compoundref="memory_management_8c" startline="39">head</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" compoundref="memory_management_8h" startline="66">_info_area::status</references>
        <references refid="memory_management_8h_1a2b7cf2a3641be7b89138615764d60ba3" compoundref="memory_management_8h" startline="48">EMPTY</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="55">TRUE</references>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="294" endline="318">memory_realloc</referencedby>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a4445092804b80242b5a1c124978837e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status memory_information</definition>
        <argsstring>()</argsstring>
        <name>memory_information</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="86" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="152" bodyend="180"/>
        <references refid="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" compoundref="memory_management_8h" startline="45">INITIAL_ZERO</references>
        <references refid="memory_management_8c_1a13b95480ca1ec551d303fb6b31b5ee9d" compoundref="memory_management_8c" startline="39">head</references>
        <references refid="memory_management_8h_1a07f4c6f14c1c3bcd57756a5e3a41e3bd" compoundref="memory_management_8h" startline="47">FILLED</references>
        <references refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" compoundref="memory_management_8h" startline="66">_info_area::status</references>
        <references refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" compoundref="memory_management_8h" startline="68">_info_area::end</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" compoundref="memory_management_8h" startline="46">EXCESS</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="user_8c_1a0592dba56693fad79136250c11e5a7fe" compoundref="user_8c" startline="29">MAX_SIZE</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="55">TRUE</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a5e16e5d3309afde94b8d6f9fc6f2364a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></type>
        <definition>status display_list</definition>
        <argsstring>()</argsstring>
        <name>display_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="87" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="357" bodyend="391"/>
        <references refid="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" compoundref="memory_management_8h" startline="45">INITIAL_ZERO</references>
        <references refid="memory_management_8c_1a13b95480ca1ec551d303fb6b31b5ee9d" compoundref="memory_management_8c" startline="39">head</references>
        <references refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" compoundref="memory_management_8h" startline="66">_info_area::status</references>
        <references refid="memory_management_8h_1a2b7cf2a3641be7b89138615764d60ba3" compoundref="memory_management_8h" startline="48">EMPTY</references>
        <references refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" compoundref="memory_management_8h" startline="68">_info_area::end</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" compoundref="memory_management_8h" startline="46">EXCESS</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="user_8c_1a0592dba56693fad79136250c11e5a7fe" compoundref="user_8c" startline="29">MAX_SIZE</references>
        <references refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" compoundref="memory_management_8h" startline="55">TRUE</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1ae30a35d507593a3635856b601305dd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_alloc</definition>
        <argsstring>(int size)</argsstring>
        <name>memory_alloc</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="88" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="53" bodyend="85"/>
        <references refid="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" compoundref="memory_management_8h" startline="45">INITIAL_ZERO</references>
        <references refid="memory_management_8c_1a0ee12c76feab0bfc62d67af9989f828d" compoundref="memory_management_8c" startline="221" endline="254">check_for_chunk_space</references>
        <references refid="user_8c_1a0592dba56693fad79136250c11e5a7fe" compoundref="user_8c" startline="29">MAX_SIZE</references>
        <references refid="memory_management_8c_1a64b0840001d30ff8cd416759a03542ce" compoundref="memory_management_8c" startline="36">in</references>
        <references refid="memory_management_8c_1ae134f9f03edd9c11c52eb9e3887911da" compoundref="memory_management_8c" startline="99" endline="115">add_node_to_list</references>
        <references refid="memory_management_8c_1ac30901f2f52d2898523245fe4ad744a0" compoundref="memory_management_8c" startline="128" endline="139">create_node</references>
        <referencedby refid="memory_management_8h_1a9fddae3713297adcee22fae422fe4383" compoundref="memory_management_8c" startline="268" endline="279">memory_calloc</referencedby>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="294" endline="318">memory_realloc</referencedby>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* check_for_chunk_space</definition>
        <argsstring>(int size)</argsstring>
        <name>check_for_chunk_space</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="89" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="221" bodyend="254"/>
        <references refid="memory_management_8c_1a13b95480ca1ec551d303fb6b31b5ee9d" compoundref="memory_management_8c" startline="39">head</references>
        <references refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" compoundref="memory_management_8h" startline="66">_info_area::status</references>
        <references refid="memory_management_8h_1a2b7cf2a3641be7b89138615764d60ba3" compoundref="memory_management_8h" startline="48">EMPTY</references>
        <references refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" compoundref="memory_management_8h" startline="68">_info_area::end</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" compoundref="memory_management_8h" startline="46">EXCESS</references>
        <references refid="memory_management_8h_1a07f4c6f14c1c3bcd57756a5e3a41e3bd" compoundref="memory_management_8h" startline="47">FILLED</references>
        <references refid="memory_management_8c_1a076f09d09570b6fb22632de428a3ec5e" compoundref="memory_management_8c" startline="37">areaIndex</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <references refid="memory_management_8c_1a7d545f1851a11aa5a292886d35957bdc" compoundref="memory_management_8c" startline="38">sizeOfNode</references>
        <referencedby refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_realloc</definition>
        <argsstring>(void *ptr, int size)</argsstring>
        <name>memory_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="90" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="294" bodyend="318"/>
        <references refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</references>
        <references refid="memory_management_8c_1a401d53c4641dc4f12bc3251d36d1bfe3" compoundref="memory_management_8c" startline="330" endline="344">memory_size</references>
        <references refid="memory_management_8c_1a8a12d29f1824bf7225965e8b35a0f3a8" compoundref="memory_management_8c" startline="194" endline="205">memory_free</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a9fddae3713297adcee22fae422fe4383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory_calloc</definition>
        <argsstring>(int nelem, int elsize)</argsstring>
        <name>memory_calloc</name>
        <param>
          <type>int</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="91" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="268" bodyend="279"/>
        <references refid="memory_management_8c_1ae30a35d507593a3635856b601305dd38" compoundref="memory_management_8c" startline="53" endline="85">memory_alloc</references>
        <referencedby refid="user_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="user_8c" startline="87" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="memory_management_8h_1a3e2309af44a44009e20dea96b76a5f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int memory_size</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>memory_size</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h" line="92" column="1" bodyfile="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/src/memoryManagement.c" bodystart="330" bodyend="344"/>
        <references refid="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" compoundref="memory_management_8h" startline="45">INITIAL_ZERO</references>
        <references refid="memory_management_8c_1a13b95480ca1ec551d303fb6b31b5ee9d" compoundref="memory_management_8c" startline="39">head</references>
        <references refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" compoundref="memory_management_8h" startline="67">_info_area::start</references>
        <references refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" compoundref="memory_management_8h" startline="68">_info_area::end</references>
        <references refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" compoundref="memory_management_8h" startline="46">EXCESS</references>
        <references refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" compoundref="memory_management_8h" startline="69">_info_area::next</references>
        <referencedby refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" compoundref="memory_management_8c" startline="294" endline="318">memory_realloc</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memoryManagement.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/>memoryManagement.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>This<sp/>program<sp/>has<sp/>the<sp/>library<sp/>functions<sp/>for<sp/>allocating<sp/>memory,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocating<sp/>memory<sp/>and<sp/>displaying<sp/>the<sp/>size<sp/>of<sp/>free<sp/>memory<sp/>and<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocated<sp/>memory.Here<sp/>the<sp/>memory<sp/>management<sp/>is<sp/>done<sp/>in<sp/>stack<sp/>segment</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>the<sp/>space<sp/>called<sp/>&quot;Allocated<sp/>heap<sp/>Space&quot;<sp/>is<sp/>assigned<sp/>in<sp/>stack</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segment<sp/>of<sp/>the<sp/>system<sp/>architecture.<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_alloc<sp/>function-This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user.<sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_free<sp/>function-This<sp/>function<sp/>frees<sp/>the<sp/>space<sp/>allocated<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>in<sp/>the<sp/>created<sp/>heap<sp/>space<sp/>under<sp/>user&apos;s<sp/>request.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_calloc<sp/>function-This<sp/>function<sp/>provides<sp/>memory<sp/>dynamically<sp/>to<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user<sp/>in<sp/>asked<sp/>number<sp/>of<sp/>blocks<sp/>of<sp/>specified<sp/>size<sp/>and<sp/>intialise<sp/>them<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_realloc<sp/>function-This<sp/>function<sp/>reallocates<sp/>memory<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previously<sp/>allocated<sp/>memory<sp/>pointer<sp/>by<sp/>asking<sp/>the<sp/>user<sp/>,the<sp/>already<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocated<sp/>pointer<sp/>and<sp/>size<sp/>to<sp/>be<sp/>allocated.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_size<sp/>function-<sp/>This<sp/>function<sp/>calculates<sp/>the<sp/>size<sp/>of<sp/>pointer.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*memory_information-This<sp/>function<sp/>gives<sp/>the<sp/>information<sp/>about<sp/>how<sp/>much</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>is<sp/>allocated<sp/>and<sp/>how<sp/>much<sp/>memory<sp/>is<sp/>free<sp/>in<sp/>given<sp/>allocated</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space.<sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/>MEMORYMANAGEMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>MEMORYMANAGEMENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Include<sp/>files</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>MACRO<sp/>DEFINITION</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="memory_management_8h_1a0592dba56693fad79136250c11e5a7fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024*1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="memory_management_8h_1a7a9a231e30b47bc0345749c8bd1e5077" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LENGTH<sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="memory_management_8h_1a4d11bc62f87fecb66ddb08bbe922e468" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITIAL_ZERO<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="memory_management_8h_1a5ce8e34830796387c57019ed0548fef1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="memory_management_8h_1a07f4c6f14c1c3bcd57756a5e3a41e3bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="memory_management_8h_1a2b7cf2a3641be7b89138615764d60ba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>ENUM<sp/>DEFINATION</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa82764c3079aea4e60c80e45befbb839" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="56" refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959aa1e095cc966dbecf6a0d8aad75348d1a" kindref="member">FALSE</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>STRUCTURE<sp/>DEFINITION.THIS<sp/>STRUCTURE<sp/>DEFINES<sp/>A<sp/>NODE<sp/>WHICH<sp/>HAS<sp/>THREE<sp/>VARIABLES<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>AND<sp/>SELF<sp/>REFERENCING<sp/>POINTER<sp/>WHICH<sp/>POINTS<sp/>TO<sp/>ADDRES<sp/>OF<sp/>THE<sp/>NEXT<sp/>NODE.</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="struct__info__area" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__info__area" kindref="compound">_info_area</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66" refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__info__area_1a6e27f49150e9a14580fb313cc2777e00" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="67" refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__info__area_1a37722a150250e2a5a98e5e0d11e53449" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__info__area_1abce9f5dc9c83f2639b72024fdee5d388" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__info__area" kindref="compound">_info_area</ref><sp/>*<ref refid="struct__info__area_1a50e27729cb837299c9b6d2464b6ebff4" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>EXTERNAL<sp/>VARIABLE<sp/>DECLARATION</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>heapArea[<ref refid="memory_management_8h_1a0592dba56693fad79136250c11e5a7fe" kindref="member">MAX_SIZE</ref>]<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>infoArea[<ref refid="memory_management_8h_1a7a9a231e30b47bc0345749c8bd1e5077" kindref="member">MAX_LENGTH</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__info__area" kindref="compound">_info_area</ref><sp/>)]<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8h_1a26aeebe75887b4360c73659342f5dc61" kindref="member">in</ref><sp/>,<sp/><ref refid="memory_management_8h_1ac2101dd85dcd849ee5f0a1c192015c68" kindref="member">areaIndex</ref><sp/>,<sp/><ref refid="memory_management_8h_1a1aa769b6f82cf2e92f748561d87a8ca6" kindref="member">sizeOfNode</ref><sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>API<sp/>DECLARATION</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__info__area" kindref="compound">_info_area</ref>*<sp/><ref refid="memory_management_8h_1ac30901f2f52d2898523245fe4ad744a0" kindref="member">create_node</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8h_1a95bbb648d6b9dcbeb6377570f5dde789" kindref="member">add_node_to_list</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__info__area" kindref="compound">_info_area</ref><sp/>*new_node);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8h_1a8a12d29f1824bf7225965e8b35a0f3a8" kindref="member">memory_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pointer);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8h_1a4445092804b80242b5a1c124978837e8" kindref="member">memory_information</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="memory_management_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="memory_management_8h_1a5e16e5d3309afde94b8d6f9fc6f2364a" kindref="member">display_list</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8h_1ae30a35d507593a3635856b601305dd38" kindref="member">memory_alloc</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>);<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8h_1a0ee12c76feab0bfc62d67af9989f828d" kindref="member">check_for_chunk_space</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8h_1aeae46c0f1bc40e0e3b469f40feefd8d0" kindref="member">memory_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="memory_management_8h_1a9fddae3713297adcee22fae422fe4383" kindref="member">memory_calloc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nelem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elsize);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="memory_management_8h_1a3e2309af44a44009e20dea96b76a5f06" kindref="member">memory_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/><sp/>MEMORYMANAGEMENT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/cisadmin/Desktop/M1032348/mini_project/source_code/Implementation1/lib/memoryManagement.h"/>
  </compounddef>
</doxygen>
