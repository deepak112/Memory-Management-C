----------------------------- MEMORY MANAGEMENT --------------------------------

Owner : Deepak Birla

---------------------------- PROJECT DESCRIPTION -------------------------------

This is library which can be used to manage memory. It provides functions like -

memory_alloc  - To allocate memory of specified size to user.
memory_free   - To free specified address.
memory_calloc - To allocate memory according to specified size and number of
		elements to user and initialize space with 0.
memory_realloc- To reallocate already allocated memory with new size.

---------------------------- FOLDERS INFORMATION -------------------------------

Source_code - Contains two implementation (folders). Detailed Description is
	      given below.

Testing     - It contains Three folders ( ApplicationTesting, AutomatedTesting
	      and Manual Testing ). Detailed description is given below.
 

-------------------------------- SOURCE CODE -----------------------------------

There are two implementations (Implementation1 and Implementation2). Both 
implementations contains 3 folders and one makefile.

Folders-

Document    - It contain document generated by doxygen. It contain documents in
              HTML format, RTF format etc. Detailed description is given below.
src         - It contains all source file
inc         - It contains header file
Object      - Intermidiate objects files generated are put in this

Files-
inc/memoryManagement.h - Contains macro decrlarations external variable declarations
                         and function declaration.

src/memoryManagement.c - Contains all function definitions( memory_alloc, memory_free etc)
 
makefile - It contains rules to compile the code.

--------------------------------- DOCUMENT -------------------------------------
                    (source_code/implementation(1,2)/Document)
This folder contains documents in various formats like HTML, RTF, LATEX, XML etc.

html        - This contains documentation of complete code in html format. index.html
              is the base file in this folder.

rtf         - This contains documentation in Rich Text File format. refman.rtf is
              the file from where we can see complete documnetaion of code.

Complete documnetation can be generated using doxygen package. By default documentation
is provided in Document folder. If doxygen package is available in your system, using 
make also you can generate documentation. How to generate documentation using makefile
is given in COMPILING CODE section.

------------------------------ CONFIGURATIONS ----------------------------------

We can counfigure things like heap size, blocks size etc.

* To change heap size change macro definition SIZE.
* To change block sizes make changes in macro definition SIZEXXX

------------------------------ COMPILING CODE ----------------------------------

: Build or compile code by running make
	# make

: An executable file of name process will be generated after previous step. Run 
        executable.
        # ./process

: To delete intermediate files and output files
	# make clean

: To generate documentation(It will generate documents in Document folder
	and for generating documents doxygen package and graphviz package should be
        installed)
	# make doc

: Installing Graphviz and Doxygen in ubuntu
	# sudo apt-get install doxygen
	# sudo apt-get install graphviz

: To delete documentation from Document folder
 	# make docclean

------------------------------ TESTING FOLDER ---------------------------------

It contains three folders.

Application Testing - In this memoryManagement.h library functions are used in 
                      programs like linkedlist and srting comparision.

Automated Testing   - To test memoryManagement.h library functions this is automated
                      testing program which will test functions for several random
		      inputs.
Manual Testing      - To test memoryManagement.h library functions this is manual
                      testing program which will test functions for several userdefined
		      inputs.


